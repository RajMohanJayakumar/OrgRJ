name: Deploy Single App to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "App to deploy"
        required: true
        default: "finclamp"
        type: choice
        options:
          - finclamp
          - arcade
          - engaged
          - skips
      environment:
        description: "Environment"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging
  push:
    branches: [main]
    paths:
      - "apps/finclamp/**"
      - "apps/arcade-games/**"
      - "apps/engaged/**"
      - "apps/skips/**"
      - "single-app-build.config.js"
      - "scripts/build-single-app.js"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Detect which app changed (for push events)
  detect-changes:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.detect.outputs.app_name }}
      has_changes: ${{ steps.detect.outputs.has_changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          # Fix submodule issue by disabling submodules
          submodules: false

      - name: Detect changed app
        id: detect
        run: |
          # Get changed files
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Detect which app changed
          if echo "$CHANGED_FILES" | grep -q "^apps/finclamp/"; then
            echo "app_name=finclamp" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          elif echo "$CHANGED_FILES" | grep -q "^apps/arcade-games/"; then
            echo "app_name=arcade" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          elif echo "$CHANGED_FILES" | grep -q "^apps/engaged/"; then
            echo "app_name=engaged" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          elif echo "$CHANGED_FILES" | grep -q "^apps/skips/"; then
            echo "app_name=skips" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          elif echo "$CHANGED_FILES" | grep -q -E "(single-app-build\.config\.js|scripts/build-single-app\.js)"; then
            # Build config changed, deploy default app
            echo "app_name=finclamp" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  # Build and deploy job
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: always() && (github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.has_changes == 'true')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fix submodule issue by disabling submodules
          submodules: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Determine app to build
        id: app-config
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            APP_NAME="${{ github.event.inputs.app_name }}"
            ENVIRONMENT="${{ github.event.inputs.environment }}"
          else
            APP_NAME="${{ needs.detect-changes.outputs.app_name }}"
            ENVIRONMENT="production"
          fi

          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "Building app: $APP_NAME (environment: $ENVIRONMENT)"

      - name: Install dependencies
        run: |
          npm ci
          # Only install dependencies for the target app
          if [ "${{ steps.app-config.outputs.app_name }}" = "arcade" ]; then
            cd apps/arcade-games
          else
            cd apps/${{ steps.app-config.outputs.app_name }}
          fi
          npm ci

      - name: Build single app
        env:
          APP_NAME: ${{ steps.app-config.outputs.app_name }}
          NODE_ENV: ${{ steps.app-config.outputs.environment }}
        run: |
          echo "Building $APP_NAME for $NODE_ENV"
          npm run build:single

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # For FinClamp: upload from root, for others: upload from dist
          path: ${{ steps.app-config.outputs.app_name == 'finclamp' && '.' || './dist' }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Build Summary
        run: |
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **App**: ${{ steps.app-config.outputs.app_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ steps.app-config.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
